knitr::opts_chunk$set(echo = TRUE)
GW2 = function(N = 100, p0 = 0.2, p1 = 0.6){
p2=1-p0-p1
X=1
extinct=FALSE
for (i in 1:N){
enfant.male = c()
for (j in 1:X){
enfant.male = c(enfant.male, sample(x = c(0,1,2), size = 1, prob = c(p0,p1,p2)))
}
X=sum(enfant.male)
if(X==0){return(FALSE)} # le nom s'est éteint
}
return(TRUE) #le nom ne s'est pas éteint
}
GW2 = function(N = 100, p0 = 0.2, p1 = 0.6){
p2=1-p0-p1
X=1
extinct=FALSE
for (i in 1:N){
enfant.male = c()
for (j in 1:X){
enfant.male = c(enfant.male, sample(x = c(0,1,2), size = 1, prob = c(p0,p1,p2)))
}
X=sum(enfant.male)
if(X==0){return(FALSE)} # le nom s'est éteint
}
return(TRUE) #le nom ne s'est pas éteint
}
for (i in 1:300){
GW2()
}
GW2 = function(N = 100, p0 = 0.2, p1 = 0.6){
p2=1-p0-p1
X=1
extinct=FALSE
for (i in 1:N){
enfant.male = c()
for (j in 1:X){
enfant.male = c(enfant.male, sample(x = c(0,1,2), size = 1, prob = c(p0,p1,p2)))
}
X=sum(enfant.male)
if(X==0){return(FALSE)} # le nom s'est éteint
}
return(TRUE) #le nom ne s'est pas éteint
}
for (i in 1:300){
GW2()
}
GW2 = function(N = 100, p0 = 0.2, p1 = 0.6){
p2=1-p0-p1
X=1
extinct=FALSE
for (i in 1:N){
enfant.male = c()
for (j in 1:X){
enfant.male = c(enfant.male, sample(x = c(0,1,2), size = 1, prob = c(p0,p1,p2)))
}
X=sum(enfant.male)
if(X==0){return(0)} # le nom s'est éteint
}
return(1) #le nom ne s'est pas éteint
}
for (i in 1:300){
GW2()
}
GW2 = function(N = 100, p0 = 0.2, p1 = 0.6){
p2=1-p0-p1
X=1
extinct=FALSE
for (i in 1:N){
enfant.male = c()
for (j in 1:X){
enfant.male = c(enfant.male, sample(x = c(0,1,2), size = 1, prob = c(p0,p1,p2)))
}
X=sum(enfant.male)
if(X==0){return(0)} # le nom s'est éteint
}
return(1) #le nom ne s'est pas éteint
}
for (i in 1:300){
print(GW2())
}
GW2 = function(N = 100, p0 = 0.2, p1 = 0.6){
p2=1-p0-p1
X=1
extinct=FALSE
for (i in 1:N){
enfant.male = c()
for (j in 1:X){
enfant.male = c(enfant.male, sample(x = c(0,1,2), size = 1, prob = c(p0,p1,p2)))
}
X=sum(enfant.male)
if(X==0){return(0)} # le nom s'est éteint
}
return(1) #le nom ne s'est pas éteint
}
Monte.Carlo.Patronyme=c()
for (i in 1:100000){
Monte.Carlo.Patronyme=c(Monte.Carlo.Patronyme, GW2())
}
mean(Monte.Carlo.Patronyme)
Monte.Carlo.Patronyme=c()
for (i in 1:100000){
Monte.Carlo.Patronyme=c(Monte.Carlo.Patronyme, GW2())
}
mean(Monte.Carlo.Patronyme)
Monte.Carlo.Patronyme=c()
for (i in 1:10000){
Monte.Carlo.Patronyme=c(Monte.Carlo.Patronyme, GW2())
}
mean(Monte.Carlo.Patronyme)
GW2 = function(N = 100, p0 = 0.2, p1 = 0.6){
p2=1-p0-p1
X=1
extinct=FALSE
for (i in 1:N){
enfant.male = c()
for (j in 1:X){
enfant.male = c(enfant.male, sample(x = c(0,1,2), size = 1, prob = c(p0,p1,p2)))
}
X=sum(enfant.male)
if(X==0){return(FALSE)} # le nom s'est éteint
}
return(TRUE) #le nom ne s'est pas éteint
}
Monte.Carlo.Patronyme=c()
for (i in 1:10000){
Monte.Carlo.Patronyme=c(Monte.Carlo.Patronyme, GW2())
}
mean(Monte.Carlo.Patronyme)
Monte.Carlo.Patronyme=c()
for (i in 1:10000){
Monte.Carlo.Patronyme=c(Monte.Carlo.Patronyme, GW2())
}
proba.extinction = 1 - mean(Monte.Carlo.Patronyme); proba.extinction
